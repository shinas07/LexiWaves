name: LexiWaves CD

on:
  workflow_run:
    workflows: ['LexiWaves CI']
    types:
      - completed
    branches:
      - main


jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create and verify deployment files
        run: |
          sed "s/\${DOCKERHUB_USERNAME}/${{ secrets.DOCKERHUB_USERNAME }}/g" Server/docker-compose.prod.yml > docker-compose.prod.yml
          echo "${{ secrets.ENV_FILE }}" > .env
          
      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.prod.yml,.env"
          target: "/home/ubuntu/lexiwaves"
          
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/lexiwaves
            docker-compose -f docker-compose.prod.yml down || true
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d
            docker system prune -f


# name: LexiWaves CD

# on:
#   workflow_run:
#     workflows: ['LexiWaves CI']
#     types: [completed]
#     branches: [main]

# jobs:
#   deploy:
#     if: ${{ github.event.workflow_run.conclusion == 'success' }}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Create deployment files
#         run: |
#           echo "${{ secrets.ENV_FILE }}" > .env
          
#       - name: Copy files to EC2
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           source: "Server/docker-compose.prod.yml,.env"
#           target: "/home/ubuntu/lexiwaves"
          
#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd /home/ubuntu/lexiwaves
#             docker-compose -f docker-compose.prod.yml down
#             docker-compose -f docker-compose.prod.yml pull
#             docker-compose -f docker-compose.prod.yml up -d
#             docker system prune -f


# name: LexiWaves CD

# on:
#   workflow_run:
#     workflows: ['LexiWaves CI']
#     types:  
#       - completed
#     branches:
#       - main

# jobs:
#   docker-deploy:
#     if: ${{ github.event.workflow_run.conclusion == 'success' }}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 1  # Shallow clone - only latest commit
          
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2  
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           context: ./Server
#           file: ./Server/Dockerfile
#           push: true
#           tags: |
#             ${{ secrets.DOCKERHUB_USERNAME }}/lexiwaves-backend:latest
#             ${{ secrets.DOCKERHUB_USERNAME }}/lexiwaves-backend:${{ github.sha }}
#           cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/lexiwaves-backend:latest
#           cache-to: type=inline
#           platforms: linux/amd64

  