version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "
        python manage.py makemigrations accounts &&
        python manage.py makemigrations &&
        python manage.py migrate accounts &&
        python manage.py migrate tutor &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A lexiWaves worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery-beat:
    build: .
    command: celery -A lexiWaves beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  static_volume:
  media_volume: